#!/usr/bin/env bash

set -euo pipefail

# Check if correct number of arguments are provided
if [ "$#" -lt 2 ]; then
    echo "Usage: $0 <file_path> <target_filename>"
    exit 1
fi

file_path="$1"
target_filename="$2"

# Get the directory of the given file path
search_dir=$(dirname "$file_path")

# Traverse upwards until the file is found
while [ "$search_dir" != "/" ]; do
    if [ -f "$search_dir/$target_filename" ]; then
        # Extract all metadata.name values under kind: Component
        # This ensures we don't take a `System` entities name but
        # we get all Component type entity associations
        name_values=$(awk '
            $1 == "kind:" && $2 == "Component" {found=1; next}
            found && $1 == "metadata:" {in_metadata=1; next}
            in_metadata && $1 == "name:" {print $2; found=0; in_metadata=0}' "$search_dir/$target_filename" | tr -d ' ')

        # If name_value is not empty, print it and exit
        if [ -n "$name_values" ]; then
            echo "$name_values"
            exit 0
        else
            echo "Error: No Component kind or metadata.name found in $target_filename"
            exit 1
        fi
    fi

    # Move one level up
    search_dir=$(dirname "$search_dir")
done

# If no file is found
echo "No file named '$target_filename' found."
exit 1
